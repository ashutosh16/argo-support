apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: argosupport
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: argosupport
    control-plane: controller-manager
  name: argo-support
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: argoaisupports.argosupport.argoproj.extensions.io
spec:
  group: argosupport.argoproj.extensions.io
  names:
    kind: ArgoAISupport
    listKind: ArgoAISupportList
    plural: argoaisupports
    singular: argoaisupport
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ArgoAISupport is the Schema for the argoaisupports API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ArgoAISupportSpec defines the desired state of ArgoAISupport
              properties:
                workflows:
                  description: |-
                    INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  items:
                    properties:
                      autProviderRef:
                        items:
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                            - name
                          type: object
                        type: array
                      initiate:
                        type: boolean
                      name:
                        type: string
                    required:
                      - autProviderRef
                      - initiate
                      - name
                    type: object
                  type: array
              type: object
            status:
              description: ArgoAISupportStatus defines the observed state of ArgoAISupport
              properties:
                lastTransitionTime:
                  format: date-time
                  type: string
                observedGeneration:
                  description: The generation observed by the  controller from metadata.generation
                  format: int64
                  type: integer
                phase:
                  type: string
                results:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  items:
                    properties:
                      feedback:
                        properties:
                          downVote:
                            type: boolean
                          feedbackMsg:
                            type: string
                          upVote:
                            type: boolean
                        type: object
                      finishedAt:
                        format: date-time
                        type: string
                      help:
                        properties:
                          links:
                            items:
                              type: string
                            type: array
                          slackChannel:
                            type: string
                        type: object
                      message:
                        type: string
                      name:
                        type: string
                      phase:
                        type: string
                      startedAt:
                        format: date-time
                        type: string
                      summary:
                        properties:
                          mainSummary:
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: authproviders.argosupport.argoproj.extensions.io
spec:
  group: argosupport.argoproj.extensions.io
  names:
    kind: AuthProvider
    listKind: AuthProviderList
    plural: authproviders
    singular: authprovider
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AuthProvider is the Schema for the authproviders API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AuthProviderSpec defines the desired state of AuthProvider
              properties:
                auth:
                  properties:
                    apiVersion:
                      type: string
                    appId:
                      type: string
                    baseUrl:
                      type: string
                    identityEndpoint:
                      type: string
                    identityJobID:
                      type: string
                  type: object
                secretRef:
                  description: SecretRef contains the credentials required to auth to
                    a specific wf_executor
                  properties:
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              type: object
            status:
              description: AuthProviderStatus defines the observed state of AuthProvider
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: argosupport
  name: argo-support-manager
  namespace: argo-support
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: argosupport
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: argosupport
  name: argosupport-leader-election-role
  namespace: argo-support
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-support-role
rules:
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - commitstatuses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - commitstatuses/finalizers
    verbs:
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - commitstatuses/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - promotionstrategies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - promotionstrategies/finalizers
    verbs:
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - promotionstrategies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - proposedcommits
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - proposedcommits/finalizers
    verbs:
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - proposedcommits/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - pullrequests
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - pullrequests/finalizers
    verbs:
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - pullrequests/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - revertcommits
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - revertcommits/finalizers
    verbs:
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - revertcommits/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - scmproviders
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - scmproviders/finalizers
    verbs:
      - update
  - apiGroups:
      - promoter.argoproj.io
    resources:
      - scmproviders/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-leader-election-rolebinding
  namespace: promoter-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promoter-leader-election-role
subjects:
  - kind: ServiceAccount
    name: promoter-controller-manager
    namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-manager-role
subjects:
  - kind: ServiceAccount
    name: promoter-controller-manager
    namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-proxy-role
subjects:
  - kind: ServiceAccount
    name: promoter-controller-manager
    namespace: promoter-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager-metrics-service
  namespace: promoter-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager
  namespace: promoter-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: quay.io/brancz/kube-rbac-proxy:v0.17.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: controller:latest
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: promoter-controller-manager
      terminationGracePeriodSeconds: 10